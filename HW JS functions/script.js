// function sayHello(){
//     console.log("–ü—Ä–∏–≤–µ—Ç, –º–∏—Ä!")
// }
// sayHello();

// function greetUser(name) {
//     console.log("–ü—Ä–∏–≤–µ—Ç, " + name + "!")
// }
//
// greetUser("–ú—ç—ç—Ä–≤–∞–Ω")
// greetUser(":–ñ–∞—Å–º–∏–Ω")
// greetUser("–û–ª—å–≥–∞")
// function  sum( a, b) {
//     return a + b;
// }
//
// let result = sum(5,10);
// console.log(result);

// function  sum (x,y){
//     return x + y;
// }
// console.log(sum(6,8));
// –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
// function wellcomeMessage (name){
//     return("Hello " + name + " welcome to IhubCourse");
// }
// let nameVal = "User";

// function openBox(){
//     console.log("–ö–æ—Ä–æ–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∞");
// }
// openBox()

//------------------------------
// function makeSound(){
//     console.log("Bip-Bip");
// }
// makeSound();
// makeSound();
// makeSound();
// --------------------------------
// function magicBox(){
//     console.log("–ê–±—Ä–∞–∫–∞–¥–∞–±—Ä–∞");
// }
// magicBox();
// function sayHello(){
//
// }
// sayHello();
// function ringBell(){
//     console.log("–î–∏–Ω-–¥–æ–Ω");
// }
// ringBell();
// ringBell();
// function startEngine(){
//     console.log("–í—Ä—É–º-–í—Ä—É–º");
// }
// startEngine();
// startEngine();
// function lightOn(){
//     console.log("–°–≤–µ—Ç –≤–∫–ª—é—á–µ–Ω!");
// }
// lightOn();
// function smile (){
//     console.log("üòä");
// }
// smile();
// function jump(){
//     console.log("Jumping");
// }
// jump();
// jump();
// jump();

// function clapHands(){
//     console.log("–•–ª–æ–ø-–•–ª–æ–ø");
// }
// clapHands();
// function greetWorld(){
//     console.log("–ü—Ä–∏–≤–µ—Ç –º–∏—Ä");
// }
// greetWorld();
// function sayBye(){
//     console.log("–üo–∫–∞!");
// }
// sayBye();
//---------------------
//     function countToThree(){
//         console.log(1);
//         console.log(2);
//         console.log(3);
//     }
//     countToThree();
//----------------------
// function showStar(){
//     console.log("‚òÖ")
// }
// showStar();
//----------------------
// function welcome(){
//     console.log("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å");
// }
// welcome();
//----------------------
// function printHello(){
//     console.log("–ü—Ä–∏–≤–µ—Ç");
// }
// printHello();
// printHello();
// printHello();
//-----------------------
// function showHeart(){
//     console.log("‚ù§Ô∏è")
// }
// showHeart();
// showHeart();
// showHeart();
// showHeart();
// --------------------------
// function printNumber(){
//     console.log(42);
// }
// printNumber();
// printNumber();
// printNumber();

//========================================================
//–ö–æ–Ω—Ü–µ–ø—Ü–∏—è - –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏ ‚Äî
// –ª–æ–∫–∞–ª—å–Ω—ã–µ, –∏—Ö –Ω–µ –≤–∏–¥–Ω–æ —Å–Ω–∞—Ä—É–∂–∏. –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤–∏–¥–Ω—ã –≤—Å–µ–º.


// const showSecret = () => {
//     let secret = "–¢—Å—Å!"// –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è "secret"- –ª–æ–∫–∞–ª—å–Ω–∞—è, —Å–Ω–∞—Ä—É–∂–∏ –µ–µ –Ω–µ –≤–∏–¥–Ω–æ
//     console.log(secret);
// };
// showSecret();
// --------------------------

// function hideTreasure(){
//     let treasure = "Gold";
//     console.log(treasure);
// }
// hideTreasure();
//---------------------------
// function sayMagic(){
//     let spell = "–ó–∞–∫–ª–∏–Ω–∞–Ω–∏–µ";
//     console.log(spell)
// }
// sayMagic();
//----------------------------
// function showGem(){
//     let gem = "–†—É–±–∏–Ω";
//     console.log(gem);
// }
// showGem();
//----------------------------
// –°–æ–∑–¥–∞–π—Ç–µ –≥–ª–æ–±–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é "world" = "–ú–∏—Ä!" –∏
// —Ñ—É–Ω–∫—Ü–∏—é "sayWorld",–∫–æ—Ç–æ—Ä–∞—è –µ–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç
// let world = "–ú–∏—Ä!";
// function sayWorld(){
//     console.log(world);
// }
// sayWorld()
// –û–±—ä—è—Å–Ω–µ–Ω–∏–µ - world - –≥–ª–æ–±–∞–ª—å–Ω–∞—è, –∫–∞–∫ –æ–±—â–∏–π –ø–ª–∞–∫–∞—Ç, –≤–∏–¥–Ω–∞ –≤—Å–µ–º,
// –≤–∫–ª—é—á–∞—è –∫–æ—Ä–æ–±–∫—É sayWorld
//----------------------------
//  function showKey(){
//      let key = "–ö–ª—é—á";
//      console.log(key);
//  }
//  showKey();
//----------------------------
// let star = "‚òÖ";
// function showStar(){
//     console.log(star);
// }
// showStar();
//----------------------------
//============================
//–ü–∞—Ä–∞–º–µ—Ç—Ä—ã-—ç—Ç–æ –¥–∞–Ω–Ω—ã–µ,–∫–æ—Ç–æ—Ä—ã–µ –º—ã –∫–ª–∞–¥–µ–º –≤ —Ä—é–∫–∑–∞–∫ —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ

// function sayHello(name){
//     console.log("–ü—Ä–∏–≤–µ—Ç, " + name + "!");
// }
// sayHello("–ê–Ω—è");
//-----------------------------
// function showAnimal(animal){
//     console.log("–≠—Ç–æ " + animal + "!")
// }
// showAnimal("–∫–æ—Ç");
// showAnimal("–°–æ–±–∞–∫–∞");
// showAnimal("–≤–µ—Ä–±–ª—é–¥")
//-------------------------------
// function greetFriend (friend){
//     console.log("–≠–π "+ friend +"!");
// }
// greetFriend("–ú—ç—ç—Ä–≤–∞–Ω");
// greetFriend("Joseph");
// greetFriend("Jasmin");
//--------------------------------
// function showColor(color){
//     console.log("–¶–≤–µ—Ç: " + color)
// }
// showColor("–∫—Ä–∞—Å–Ω—ã–π");
//---------------------------------
// function sayFood(food){
//     console.log("–ï–¥–∞ " + food + "!");
// }
// sayFood("–ü–∏—Ü—Ü–∞");
//---------------------------------
// function sayCity(city){
//     console.log("–ì–æ—Ä–æ–¥ " + city + "!");
// }
// sayCity("–ë–∏—à–∫–µ–∫");
//----------------------------------
// function showFuit(fruit) {
//     console.log("–§—Ä—É–∫—Ç " + fruit + "!");
// }
// showFuit("–Ø–±–ª–æ–∫–æ");
//-----------------------------------
//–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ –∞—Ä–≥—É–º–µ–Ω—Ç—ã
// –ø–∞—Ä–∞–º–µ—Ç—Ä - —ç—Ç–æ –∏–º—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –≤ —Ñ—É–Ω–∫—Ü–∏–∏, –∞—Ä–≥—É–º–µ–Ω—Ç - –∑–Ω–∞—á–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –ø–µ—Ä–µ–¥–∞–µ–º
// function greet(name){
//     console.log("–ü—Ä–∏–≤–µ—Ç " + name + "!");
// }
// greet("–ö–∞—Ç—è");
// function showNumber(num){
//     console.log("–ß–∏—Å–ª–æ " + num + "!");
// }
// showNumber(42);
//=============================================
//–ó–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
// function greet(name = "–≥–æ—Å—Ç—å"){
//     console.log("–ü—Ä–∏–≤–µ—Ç, " + name + "!");
// }
//
// greet();
// greet("–ê–Ω—è");
//-----------------------------------
// function sayAnimal(animal = "–∫–æ—Ç"){
//     console.log("This is, " + animal + "!");
// }
// sayAnimal();
// sayAnimal("Bear");
//==============================================
//–í–æ–∑–≤—Ä–∞—Ç –∑–∞–Ω—á–µ–Ω–∏–π - "return"
//return - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –∫–∞–∫ –ø–æ–¥–∞—Ä–æ–∫ –∏–∑
// –∫–æ—Ä–æ–±–∫–∏. –ü–æ—Å–ª–µ return —Ñ—É–Ω–∫—Ü–∏—è –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è
// function add(a,b){
//     return a + b;
// }
//
// console.log(add(5,8));
//---------------------------------------
//  function double(num){
//      return num * 2;
//  }
//
// console.log(double(58));
//-----------------------------------
// function square (num){
//     return num * num;
// }
//
// console.log(square(5))
//-----------------------------
// function subtract (a,b){
//     return  a - b;
// }
//
// console.log(subtract(17,9));
//-----------------------------
// function divide(a,b){
//     return a/b;
// }
//
// console.log(divide(58,5));
//-------------------------------
// function getGreetings(){
//     return "–ü—Ä–∏–≤–µ—Ç!";
// }
// console.log(getGreetings());
//----------------------------
//–°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é `stopEarly()`,
// –∫–æ—Ç–æ—Ä–∞—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç "–°—Ç–æ–ø!" –∏ –Ω–µ –≤—ã–≤–æ–¥–∏—Ç "–ò–¥—ë–º –¥–∞–ª—å—à–µ"
// function stopEarly(){
//     return "–°—Ç–æ–ø!"
//     console.log("–ò–¥–µ–º –¥–∞–ª—å—à–µ");//–Ω–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è
// }
//
// console.log(stopEarly());
//--------------------------------

// function checkNumber (num){
//     if(num < 10)
//     return "–ú–µ–Ω—å—à–µ 10";
//     console.log("–ë–æ–ª—å—à–µ");
// }
// console.log(checkNumber(5));
//-------------------------------
// function sayHi(){
//     return "–ü—Ä–∏–≤–µ—Ç!";
//     console.log("–ü–æ–∫–∞!")
// }
//
// console.log(sayHi());
//---------------------------------
// function getFive(){
//     return 5;
//     console.log("–î–µ—Å—è—Ç—å")
// }
//
// console.log(getFive());
//----------------------------------
// function checkZero(num){
//     if (num === 0) return "–ù–æ–ª—å";
//     console.log("–ù–µ –Ω–æ–ª—å");
// }
//
// console.log(checkZero(0));
//-----------------------------------
// function sayYes(){
//     return "Yes";
//     console.log("No");
// }
//
// console.log(sayYes());
//---------------------------------
// function getTen(){
//     return 10;
//     console.log("–î–≤–∞–¥—Ü–∞—Ç—å")
// }
//
// console.log(getTen());
//---------------------------------
// function checkPositive(num){
//     if (num > 0) return "–ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ";
//     console.log("–û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ")
// }
//
// console.log(checkPositive(5));
// function sayHello(){
//     return "–ü—Ä–∏–≤–µ—Ç";
//     console.log("–≠–π");
// }
//
// console.log(sayHello());
//--------------------------------
//–£—Å–ª–æ–≤–∏–µ –±–µ–∑ `else`
// **–ö–æ–Ω—Ü–µ–ø—Ü–∏—è:** –ï—Å–ª–∏ –µ—Å—Ç—å `return`,
// –º–æ–∂–Ω–æ –Ω–µ –ø–∏—Å–∞—Ç—å `else`, —Ç–∞–∫ –∫–∞–∫ —Ñ—É–Ω–∫—Ü–∏—è –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è.
// function isBig(num){
//     if(num >100) return "–ë–æ–ª—å—à–æ–µ";
//     return  "–ú–∞–ª–µ–Ω—å–∫–æ–µ";
// }
//
// console.log(isBig(150));
// console.log(isBig(50));
//---------------------------------
// function isPositive(num){
//     if (num > 0) return "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ";
//     return "–Ω–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ";
// }
//
// console.log(isPositive(7));
// console.log(isPositive(-1));
//------------------------------------
// function isZero(num){
//     if (num === 0) return "–ù–æ–ª—å"
//     return "–ù–µ –Ω–æ–ª—å";
// }
//
// console.log(isZero(0));
// console.log(isZero(5));
// function isEven(num){
//     if (num % 2 === 0) return "–ß–µ—Ç–Ω–æ–µ";
//     return "–ù–µ—á–µ—Ç–Ω–æ–µ";
// }
//
// console.log(isEven(8));
// console.log(isEven(5));

// function isAdult(age){
//     if (age >= 18) return "–í–∑—Ä–æ—Å–ª—ã–π";
//     return "–†–µ–±–µ–Ω–æ–∫";
// }
//
// console.log(isAdult(20));
// console.log(isAdult(15));
//--------------------------------
// function isLong(str){
//     if (str.length > 5) return "–î–ª–∏–Ω–Ω–æ–µ"
//     return "–ö–æ—Ä–æ—Ç–∫–æ–µ";
// }
//
// console.log(isLong("–ü—Ä–∏–≤–µ—Ç!"));
// console.log(isLong("–ö–æ—Ç"));
//--------------------------------
// function isNegative(num){
//     if (num < 0) return "–û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ";
//     return "–ù–µ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ";
// }
//
// console.log(isNegative(-5));
// console.log(isNegative(5));
//---------------------------------
// function isEmpty(str){
//     if (str === "") return "–ü—É—Å—Ç–æ";
//     return "–ù–µ –ø—É—Å—Ç–æ";
// }
//
// console.log(isEmpty(""));
// console.log(isEmpty("T–µ–∫—Å—Ç"))

// function isTrue(bool){
//     if (bool ===true) return "–ò—Å—Ç–∏–Ω–∞";
//         return "–õ–æ–∂—å";
// }
//
// console.log(isTrue(true));
// console.log(isTrue(false));
// function isBig(num){
//     if (num > 100){
//         return "–ë–æ–ª—å—à–æ–µ";
//     } else {
//         return "–ú–∞–ª–µ–Ω—å–∫–æ–µ";
//     }
// }
//
// console.log(isBig(150));
// console.log(isBig(50));
//------------------------------
// function isPositive (num){
//     if (num > 0){
//         return "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ";
//     }else {
//         return "–Ω–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ";
//     }
// }
//
// console.log(isPositive(5));
// console.log(isPositive(-5))
//---------------------------------
// function isLong(str){
//     if (str.length > 5){
//         return "–î–ª–∏–Ω–Ω–æ–µ";
//     }else{
//         return "–ö–æ—Ä–æ—Ç–∫–æ–µ";
//     }
// }
//
// console.log(isLong("–ø—Ä–∏–≤–µ—Ç"));
// console.log(isLong("–ö–æ—Ç"));
//----------------------------
// function isEmpty(str){
//     if (str === ""){
//         return "–ø—É—Å—Ç–æ";
//     }else {
//         return "–Ω–µ –ø—É—Å—Ç–æ";
//     }
// }
//
// console.log(isEmpty(""));
// console.log(isEmpty("–¢–µ–∫—Å—Ç"));
// function  isTen(num){
//     if (num === 10){
//         return "–î–µ—Å—è—Ç—å";
//     }else{
//         return "–Ω–µ –¥–µ—Å—è—Ç—å";
//     }
// }
//
// console.log(isTen(10));
// console.log(isTen(5));
//----------------------------
//–í–∞—Ä–∏–∞–Ω—Ç —Å —Ç–µ—Ä–Ω–∞—Ä–Ω—ã–º –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º `?`
// **–ö–æ–Ω—Ü–µ–ø—Ü–∏—è:** –¢–µ—Ä–Ω–∞—Ä–Ω—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä (`?:`)
// ‚Äî –∫–æ–º–ø–∞–∫—Ç–Ω–∞—è –∑–∞–º–µ–Ω–∞ `if` –¥–ª—è –ø—Ä–æ—Å—Ç—ã—Ö —É—Å–ª–æ–≤–∏–π.
// function isBig(num){
//     return num > 100 ? "–ë–æ–ª—å—à–æ–µ" :"–ú–∞–ª–µ–Ω—å–∫–æ–µ";
// }
//
// console.log(isBig(150));
// console.log(isBig(50));
//-----------------------------------------
// function isPositive(num){
//     return num > 0 ? "–ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ": "–ù–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ";
// }
//
// console.log(isPositive(5));
// console.log(isPositive(-1));
//------------------------------------------
// function isEven(num){
//     return num % 2 === 0 ? "–ß–µ—Ç–Ω–æ–µ" : "–ù–µ—á–µ—Ç–Ω–æ–µ";
// }
//
// console.log(isEven(4));
// console.log(isEven(5));
// function isLong(str){
//     return str.length > 5 ? "–î–ª–∏–Ω–Ω–æ–µ" : "–∫–æ—Ä–æ—Ç–∫–æ–µ";
// }
//
// console.log(isLong("–°–∞–ª–∞–º–∞—Ç"));
// console.log(isLong("–ö–æ—Ç"))
//---------------------------------------
// function isEmpty(str){
//     return str === "" ? "–ü—É—Å—Ç–æ" : "–Ω–µ –ø—É—Å—Ç–æ";
// }
//
// console.log(isEmpty(""));
// console.log(isEmpty("–¢–µ–∫—Å—Ç"));
//----------------------------------
// –í–∞—Ä–∏–∞–Ω—Ç —Å `||`
// **–ö–æ–Ω—Ü–µ–ø—Ü–∏—è:** –û–ø–µ—Ä–∞—Ç–æ—Ä `||`
// –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–µ—Ä–≤–æ–µ –∏—Å—Ç–∏–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–ª–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–µ, –µ—Å–ª–∏ –≤—Å–µ –ª–æ–∂–Ω—ã–µ.
// function hasValue(val){
//     return val || "–Ω–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è";
// }
//
// console.log(hasValue(5));
// console.log(hasValue(0));
// –Ω–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é,–∫–æ—Ç–æ—Ä–∞—è —É–¥–≤–∞–∏–≤–∞–µ—Ç –∫–∞–∂–¥–æ–µ —á–∏—Å–ª–æ –≤ –º–∞—Å—Å–∏–≤–µ.
//–ü—Ä–∏–º–µ—Ä: Input [5,10,15]

//—Ä–µ—à–µ–Ω–∏–µ
//                                                   –î–ó –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –ù—É—Ä–∏—Å–ª–∞–º
//Task 1: –£–¥–≤–æ–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π –º–∞—Å—Å–∏–≤–∞
// –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Ç–æ–¥ map, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–∑–¥–∞—ë—Ç –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤,
// –ø—Ä–∏–º–µ–Ω—è—è –∫ –∫–∞–∂–¥–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞ —É–∫–∞–∑–∞–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é.

// const doubleArray = (arr) => arr.map((num) => num * 2);
//
// console.log(doubleArray([1, 2, 3]));
// console.log(doubleArray([4, 1, 1, 1, 4]));
// console.log(doubleArray([2, 2, 2, 2, 2, 2]));
//++++++++++++++++++++++++++++++++++++++++++++


//Task 2: –£–¥–∞–ª–µ–Ω–∏–µ –∫–∞–∂–¥–æ–≥–æ –≤—Ç–æ—Ä–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
// –ó–¥–µ—Å—å –Ω–∞–º –ø–æ–º–æ–∂–µ—Ç –º–µ—Ç–æ–¥ filter. –û–Ω —Å–æ–∑–¥–∞—ë—Ç –Ω–æ–≤—ã–π
// –º–∞—Å—Å–∏–≤ —Ç–æ–ª—å–∫–æ —Å —Ç–µ–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏, –¥–ª—è –∫–æ—Ç–æ—Ä—ã—Ö
// –ø–µ—Ä–µ–¥–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤–µ—Ä–Ω—É–ª–∞ true. –ú—ã –±—É–¥–µ–º
// –ø—Ä–æ–≤–µ—Ä—è—Ç—å –∏–Ω–¥–µ–∫—Å –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞.

// const removeSecondElement = (arr) => arr.filter((_, index) => index % 2 === 0);
//
// console.log(removeSecondElement(['–ü—Ä–∏–≤–µ—Ç', '–ü–æ–∫–∞', '–°–Ω–æ–≤–∞ –ø—Ä–∏–≤–µ—Ç']));
// console.log(removeSecondElement([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));
// console.log(removeSecondElement(['–ü–æ–∫–∞', {'–¶–≤–µ—Ç': '–°–∏–Ω–∏–π'}]));
//********************************************

//Task 3: –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∑–Ω–∞–∫–∞ —á–∏—Å–µ–ª
// –°–Ω–æ–≤–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º map. –ö–∞–∂–¥–æ–µ —á–∏—Å–ª–æ –ø—Ä–æ—Å—Ç–æ —É–º–Ω–æ–∂–∏–º –Ω–∞ -1.

//const invertNumbers = (arr) => arr.map((num) => num * -1);

// console.log(invertNumbers([1, 2, 3, 4, 5]));
// console.log(invertNumbers([1, -2, 3, -4, 5]));
// console.log(invertNumbers([]));
// console.log(invertNumbers([0]));
//++++++++++++++++++++++++++++++++++++++++

//Task 4: –í–æ–∑–≤—Ä–∞—Ç —á–∞—Å—Ç–∏ –º–∞—Å—Å–∏–≤–∞
// –î–ª—è —ç—Ç–æ–π –∑–∞–¥–∞—á–∏ –∏–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç
// –º–µ—Ç–æ–¥ slice. –û–Ω –ø–æ–∑–≤–æ–ª—è–µ—Ç "–≤—ã—Ä–µ–∑–∞—Ç—å" —á–∞—Å—Ç—å –º–∞—Å—Å–∏–≤–∞, –Ω–µ –º–µ–Ω—è—è –∏—Å—Ö–æ–¥–Ω—ã–π.
//*****************************************************
// const getFirstElements = (arr, count) => {
//     const newArray = arr.slice(0, count);
//     return newArray;
// };

// console.log(getFirstElements([0, 1, 2, 3, 5, 8, 13], 3));
// console.log(getFirstElements([0, 1, 2, 3, 5, 8, 13], 5));
//******************************************************

//Task 5: –≠–ª–µ–º–µ–Ω—Ç—ã, –∫—Ä–∞—Ç–Ω—ã–µ —Å–≤–æ–µ–º—É –∏–Ω–¥–µ–∫—Å—É
// –° –ø–æ–º–æ—â—å—é filter –º—ã –º–æ–∂–µ–º –ø—Ä–æ–≤–µ—Ä—è—Ç—å,
// –¥–µ–ª–∏—Ç—Å—è –ª–∏ —ç–ª–µ–º–µ–Ω—Ç –Ω–∞ —Å–≤–æ–π –∏–Ω–¥–µ–∫—Å –±–µ–∑ –æ—Å—Ç–∞—Ç–∫–∞.

// const filterByDivisibility = (arr) => arr.filter((num, index) => index !== 0 && num % index === 0);

// console.log(filterByDivisibility([22, -6, 32, 82, 9, 25]));
// console.log(filterByDivisibility([68, -1, 1, -7, 10, 10]));
// console.log(filterByDivisibility([11, -11]));
//****************************************************
//Task 6: –ó–∞–º–µ–Ω–∞ —Å—Ç—Ä–æ–∫ –Ω–∞ null
// –ò—Å–ø–æ–ª—å–∑—É–µ–º map –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ
// –º–∞—Å—Å–∏–≤–∞. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ —Å –ø–æ–º–æ—â—å—é typeof.

// const replaceStringsWithNull = (arr) => arr.map((item) => typeof item === 'string' ? null : item);
//
// console.log(replaceStringsWithNull([4, 6, 'Ivan', 5, 'Denis ']));

//****************************************************************************

//–î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏–π —è –±—É–¥—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥—ã map,
// filter –∏ slice.–≠—Ç–∏ –º–µ—Ç–æ–¥—ã –ø–æ–∑–≤–æ–ª—è—é—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å –º–∞—Å—Å–∏–≤–∞–º–∏,
// –Ω–µ –∏—Å–ø–æ–ª—å–∑—É—è —Ü–∏–∫–ª—ã for, —á—Ç–æ –¥–µ–ª–∞–µ—Ç –∫–æ–¥ –±–æ–ª–µ–µ –ª–∞–∫–æ–Ω–∏—á–Ω—ã–º –∏ —á–∏—Ç–∞–µ–º—ã–º.

//Task 1: –£–¥–≤–æ–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π –º–∞—Å—Å–∏–≤–∞
// –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Ç–æ–¥ map, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–∑–¥–∞—ë—Ç –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤,
// –ø—Ä–∏–º–µ–Ω—è—è –∫ –∫–∞–∂–¥–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞ —É–∫–∞–∑–∞–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é.

// const doubleArray = (arr) => arr.map((num) => num * 2);
//
// console.log(doubleArray([1, 2, 3]));
// console.log(doubleArray([4,1,1,1,4]));
// console.log(doubleArray([2,2,2,2,2,2]));
//****************************************************************************

// const doubleValues = (arr) => {
//     return arr.map(number => number * 2);
// };
// const inputArray1 = [1,2,3];
// console.log(doubleValues(inputArray1));
//++++++++++++++++++++++++++++++++++++++++++++++
// const findGreaterThanFive = (arr) => {
//     return arr.filter(number => number > 5);
// }
// const inputArray2 = [1,6,3,8,4];
// console.log(findGreaterThanFive(inputArray2));
//++++++++++++++++++++++++++++++++++++++++++++++

// const removeZeros = (arr) => {
//     return arr.filter(number => number !==0);
// }
// const inputArray3 = [1,0,2,0,3,0];
// console.log(removeZeros(inputArray3));

//+++++++++++++++++++++++++++++++++++++++++++++++
// const toUpperCase = (arr) => {
//     return arr.map(str => str.toUpperCase());
// };
// const inputArray4 = ["hello", "world"];
// console.log(toUpperCase(inputArray4));
//+++++++++++++++++++++++++++++++++++++++++++++++
// const replaceNegatives = (arr) => {
//     return arr.map(number => number < 0 ? 0 : number);
// };
// const inputArray5 = [1, -2, 3, -4, 5];
// console.log(replaceNegatives(inputArray5));
//+++++++++++++++++++++++++++++++++++++++++++++++++

// const cubeAndReplace = (arr) => arr.map(num => {
//     const cubed = num ** 3;
//     return (cubed % 3 === 0 && cubed % 5 === 0) ? 0 : cubed;
// });
//
// console.log(cubeAndReplace([7, 8, 15, 30, 2])); // [343, 512, 0, 0, 8]


// const createDivs = (arr) => arr.map((num) => `<div>${num}</div>`);
//
// // –ü—Ä–∏–º–µ—Ä—ã:
// console.log(createDivs([1, 2, 3, 4, 5]));
// // Output: [ '<div>1</div>', '<div>2</div>', '<div>3</div>', '<div>4</div>', '<div>5</div>' ]

// const filterEvenLengthStrings = (arr) => arr.filter((str) => str.length % 2 === 0);
//
// // –ü—Ä–∏–º–µ—Ä—ã:
// console.log(filterEvenLengthStrings(['ab', 'abc', 'abcd']));
// // Output: ['ab', 'abcd']
//=========================================================******
//07.08.2025

// const numbers = [1,2,3];
// const doubled = numbers.map(num => num * 2);
//
// console.log(doubled);
// console.log(numbers);
//---------------------------------------------------------------
// const words = ['–ø—Ä–∏–≤–µ—Ç','–º–∏—Ä','javascript'];
// const upperCasewords = words.map(word => word.toUpperCase());
//
// console.log(upperCasewords);
//---------------------------------------------------------------
// const ids = [101,102,103];
// const formattedIds = ids.map(id => `ID: ${id}`);
//
// console.log(formattedIds);

//–í—ã—á–∏—Å–ª–µ–Ω–∏–µ –ø–ª–æ—â–∞–¥–∏ –∫—Ä—É–≥–∞ ‚ö™

// const radiuses = [1,2,3];
// const areas = radiuses.map(r => Math.PI * r * r);
//
// console.log(areas);

// let salaries = {
//     John: 100,
//     Ann: 160,
//     Pete,
// };
//
// let sum = 0;
// for (let key in salaries){
//     sum += salaries[key];
// }
// alert(sum);
// –î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ==========================================
// const sumOfSquares = (numbers) => {
//     return numbers.reduce((accumulator, currentValue) =>{
//         return accumulator + currentValue * currentValue;
//     }, 0);
// };
// console.log(sumOfSquares([1,2,3]));
//-----------------------------------------------------------
// const filterAndDoubleEvens = (numbers) => {
//     return numbers.reduce((accumulator, currentValue) => {
//         if (currentValue % 2 === 0){
//             accumulator.push(currentValue*2);
//         }
//         return accumulator;
//     },[])
// }
//
// console.log(filterAndDoubleEvens([1,2,3,4,5,6]));
//-----------------------------------------------------------
const countShortNames = (names) => {
    return names.reduce((count, currentName) => {
        if (currentName.length <= 5){
            return count + 1;
        }
        return count;
    },0);
};
console.log(countShortNames(['–ï–≤–¥–æ–∫–∏–º', 'Ivan','–ò–≥–Ω–∞—Ç','Denis ']))



